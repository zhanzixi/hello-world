apiVersion: v1
kind: Service
metadata:
  name: seata-server
  namespace: default
  labels:
    app: seata-server
spec:
  type: NodePort
  ports:
    - port: 8091
  selector:
    app: seata-server

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: seata-server-config
data:
  registry.conf: |
    registry {
        type = "nacos"
        nacos {
          application = "seata-server"
          serverAddr = "nacos.default.svc.cluster.local:8848"
          namespace = "70aecda0-1a89-4c88-b8b1-e94a29a09f57"
          cluster = "default"
          username = ""
          password = ""
        }
    }
    config {
      type = "file"
      file {
        name = "file:/root/seata-config/file.conf"
      }
    }
  file.conf: |
    store {
      mode = "db"

      db {
        datasource = "druid"
        dbType = "mysql"
        driverClassName = "com.mysql.cj.jdbc.Driver"
        url = "jdbc:mysql://192.168.220.4:3306/seata"
        user = "root"
        password = "MyNewPass4!"
        minConn = 5
        maxConn = 30
        globalTable = "global_table"
        branchTable = "branch_table"
        lockTable = "lock_table"
        queryLimit = 100
        maxWait = 5000
      }
    }

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: seata-server
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: seata-server
  template:
    metadata:
      labels:
        app: seata-server
    spec:
      containers:
        - name: seata-server
          image: seataio/seata-server:1.2.0
          env:
            - name: SEATA_CONFIG_NAME
              value: file:/root/seata-config/registry
            - name: STORE_MODE
              value: "db"
          ports:
            - name: http
              containerPort: 8091
          volumeMounts:
            - name: seata-config
              mountPath: /root/seata-config
      volumes:
        - name: seata-config
          configMap:
            name: seata-server-config
